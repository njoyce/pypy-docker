# NOTE: Don't modify this file directly - see Makefile

# build PyPy and put the files destined for /usr in to /data
# Another container then can be used to inject these files and install some base
# dependencies
FROM alpine:{{ .AlpineVersion }} as builder

# add dev packages
RUN apk --update add \
    build-base \
    bzip2-dev \
    ca-certificates \
    expat-dev \
    gdbm-dev \
    libc-dev \
    libffi-dev \
    linux-headers \
    ncurses-dev \
    openssl-dev \
    pax-utils \
    readline-dev \
    python-dev \
    py-pip \
    sqlite-dev \
    tar \
    tk \
    tk-dev \
    curl \
    zlib-dev

RUN mkdir -p /tmp/build
WORKDIR /tmp/build

# download the PyPy source ball and apply patches to build correctly on alpine
RUN PYPY_FILE=pypy2-v{{ .PyPyVersion }}-src.tar.bz2 \
  && curl -SLO "https://bitbucket.org/pypy/pypy/downloads/$PYPY_FILE" \
  && tar -xjf "$PYPY_FILE" -C . --strip-components=1

RUN pip install cffi
# Build PyPy - this will take an epically long time (>2h)
RUN python rpython/bin/rpython --opt=jit pypy/goal/targetpypystandalone.py 

# Create the release package
RUN python pypy/tool/release/package.py \
    --override_pypy_c ./pypy-c \
    --archive-name pypy-{{ .PyPyVersion }}-linux64

WORKDIR /tmp/usession-release-pypy2.7-v{{ .PyPyVersion }}-1/build/pypy-{{ .PyPyVersion }}-linux64

# prune the package to minimise the install size
RUN find . | grep \/test\/ | xargs rm -rf
RUN find . | grep \/tests\/ | xargs rm -rf

RUN mkdir /dest && cp -Pr * /dest

# inject pypy in to the final container
FROM alpine:{{ .AlpineVersion }}

RUN apk add --no-cache --virtual .pypy-deps \
  expat \
  gdbm \
  libc6-compat \
  libbz2 \
  libcrypto1.0 \
  libffi \
  libgcc \
  libssl1.0 \
  ncurses-libs \
  sqlite-libs \
  zlib \
  tk

COPY --from=builder /dest /usr

RUN ln -s /usr/bin/pypy /usr/bin/python

RUN apk --update --no-cache add --virtual .pip-deps \
    curl \
    tar \
    ca-certificates \
  && curl -SL 'https://bootstrap.pypa.io/get-pip.py' | /usr/bin/pypy \
  && pip install --upgrade pip setuptools \
  && rm -rf /root/.pip \
  && apk del .pip-deps

CMD ["/usr/bin/pypy"]
